# MySQL config described here:
# https://springframework.guru/configuring-spring-boot-for-mysql
spring.h2.console.enabled: false

# NOTE: If this was actually a production database, you not tell Hibernate
# to use the create-drop option. This tells Hibernate to recreate the database on startup.
# Definitely not the behavior we want.
# You can set this property to the following values:
# none, validate, update, create-drop.
# If this was actually a production database, you probably would want to use validate.
#spring.jpa.hibernate.ddl-auto: create-drop
spring.jpa.hibernate.ddl-auto: update

spring.servlet.multipart.max-file-size: 500MB
spring.servlet.multipart.max-request-size: 500MB

management.security.enabled: true
management.context-path: /admin/

spring.jpa.properties.hibernate.generate_statistics: false
spring.jpa.show-sql: false

app.file: "/data"
app.dailymotion_url:

app.admin.username: "admin"
app.admin.password: "adminpassword"
app.name: "Signs@Work"

app.manifest: "/manifest/signsatwork/manifest.json"
app.version: "6.0.9"
app.contact.support: "signsatwork.support@orange.com"

cgu-url: "https://www.dailymotion.com/embed/video/k2HwFhjhimHm1uvOU3g"
display-url: "https://www.dailymotion.com/embed/video/k2ADmPrk2ekIL2vU8hf"

spring:
  mail:
    host: mailhost.rd.francetelecom.fr
    port: 2525
  main:
    allow-circular-references: true

#    5am every day
purge.cron.expression: 0 0 5 * * ?

spring.jackson.serialization.write-dates-as-timestamps: true

spring.jpa.properties.hibernate.id.new_generator_mappings: false

